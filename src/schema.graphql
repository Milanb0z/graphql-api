type Query {
  test: String!
  feed: [Post]!
  users(userID: String): [User]!
}

type Subscription {
  count: Int!
}

input createUserInput {
  email: String!
  name: String!
  age: Int!
  role: UserRole!
}

input createPostInput {
  text: String!
  authorId: String!
  published: Boolean!
}

type Mutation {
  createUser(data: createUserInput): User!
  createPost(data: createPostInput): Post!
}

enum UserRole {
  EDITOR
  READER
}

type User {
  id: ID!
  name: String!
  email: String!
  age: String!
  posts: [Post]!
  role: UserRole!
}

type Post {
  id: ID!
  text: String!
  author: User!
  published: Boolean!
}
